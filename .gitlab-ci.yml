image: docker

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

test:
  image: node
  only:
    - develop
  script:
    - npm install -y -p
    - npm run test

build:
  image: node
  only:
    - master
  variables:
    CHANNEL: "update"

  script:
    - npm install -y -p
    - npm run test
    - npm run build
    - tar czf release.tar.gz package.json pm2.config.json update.sh dist/

  after_script:
    - export IMG_VERSION=`cat package.json |grep version|cut -d ':' -f 2| sed 's/[" ,]//g'`
    - export PN_DATA="{\"BuildId\":\"$CI_BUILD_ID\",\"ProjectId\":\"$CI_PROJECT_ID\",\"AppVersion\":\"$IMG_VERSION\" }"
    - export PAYLOAD=`node -e "console.log(encodeURIComponent('$PN_DATA'))"`
    - echo "RUN PubNub notification $PAYLOAD"
    #- curl --silent https://ps.pndsn.com/publish/$PUB_KEY/$SUB_KEY/0/$CHANNEL/cb/$PAYLOAD

  artifacts:
    paths:
      - release.tar.gz

dockerimage:
  only:
    - tags
    - v_\d+.\d+.\d+
  script:
    - export IMG_VERSION=`cat package.json |grep \"version\"|cut -d ':' -f 2| sed 's/[" ,]//g'`
    - export CI_PROJECT_NAMESPACE=`echo $CI_PROJECT_NAMESPACE | tr '[A-Z]' '[a-z]'`
    - export CI_PROJECT_NAME=`echo $CI_PROJECT_NAME | tr '[A-Z]' '[a-z]'`
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:${IMG_VERSION} .
    - docker build -t registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest .
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:${IMG_VERSION}
    - docker push registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

